# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-11-02 11:07
from __future__ import unicode_literals

from django.db import migrations, models
import uuid


def concat_uuid(apps, schema_editor):
    qs = apps.get_model("museum", "Author")
    for object in qs.objects.all():
        qs.objects.filter(pk=object.pk).update(uuid=object.uuid.replace('-', ''))

    qs = apps.get_model("museum", "Collection")
    for object in qs.objects.all():
        qs.objects.filter(pk=object.pk).update(uuid=object.uuid.replace('-', ''))

    qs = apps.get_model("museum", "Entry")
    for object in qs.objects.all():
        qs.objects.filter(pk=object.pk).update(uuid=object.uuid.replace('-', ''))

    qs = apps.get_model("museum", "Experiment")
    for object in qs.objects.all():
        qs.objects.filter(pk=object.pk).update(uuid=object.uuid.replace('-', ''))

    qs = apps.get_model("museum", "License")
    for object in qs.objects.all():
        qs.objects.filter(pk=object.pk).update(uuid=object.uuid.replace('-', ''))

    qs = apps.get_model("museum", "Link")
    for object in qs.objects.all():
        qs.objects.filter(pk=object.pk).update(uuid=object.uuid.replace('-', ''))




class Migration(migrations.Migration):

    dependencies = [
        ('museum', '0027_collection_doc_id'),
    ]

    # update sql using postgres specific style
    sql_uuid_migration_author = 'alter table museum_author alter column uuid type uuid using uuid::uuid;'
    sql_uuid_migration_collection = 'alter table museum_collection alter column uuid type uuid using uuid::uuid;'
    sql_uuid_migration_entry = 'alter table museum_entry alter column uuid type uuid using uuid::uuid;'
    sql_uuid_migration_experiment = 'alter table museum_experiment alter column uuid type uuid using uuid::uuid;'
    sql_uuid_migration_license = 'alter table museum_license alter column uuid type uuid using uuid::uuid;'
    sql_uuid_migration_link = 'alter table museum_link alter column uuid type uuid using uuid::uuid;'

    operations = [

        # update uuid
        migrations.RunPython(concat_uuid),

        migrations.RunSQL('SET CONSTRAINTS ALL IMMEDIATE',
                          reverse_sql=migrations.RunSQL.noop),

        migrations.AlterModelOptions(
            name='experiment',
            options={'ordering': ('title',), 'verbose_name': 'experiment', 'verbose_name_plural': 'experiments'},
        ),

        migrations.RunSQL(sql_uuid_migration_author, None, [
            migrations.AlterField(
                model_name='author',
                name='uuid',
                field=models.UUIDField(default=uuid.uuid4, editable=False),
            ),
        ]),
        migrations.RunSQL(sql_uuid_migration_collection, None, [
            migrations.AlterField(
                model_name='collection',
                name='uuid',
                field=models.UUIDField(default=uuid.uuid4, editable=False),
            ),
        ]),
        migrations.RunSQL(sql_uuid_migration_entry, None, [
            migrations.AlterField(
                model_name='entry',
                name='uuid',
                field=models.UUIDField(default=uuid.uuid4, editable=False),
            ),
        ]),
        migrations.RunSQL(sql_uuid_migration_experiment, None, [
            migrations.AlterField(
                model_name='experiment',
                name='uuid',
                field=models.UUIDField(default=uuid.uuid4, editable=False),
            ),
        ]),
        migrations.RunSQL(sql_uuid_migration_license, None, [
            migrations.AlterField(
                model_name='license',
                name='uuid',
                field=models.UUIDField(default=uuid.uuid4, editable=False),
            ),
        ]),
        migrations.RunSQL(sql_uuid_migration_link, None, [
            migrations.AlterField(
                model_name='link',
                name='uuid',
                field=models.UUIDField(default=uuid.uuid4, editable=False),
            ),
        ]),

        migrations.RunSQL(migrations.RunSQL.noop,
                          reverse_sql='SET CONSTRAINTS ALL IMMEDIATE')
    ]
