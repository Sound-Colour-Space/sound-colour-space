# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-12 00:40
from __future__ import unicode_literals

import common.storage
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import museum.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('date_of_birth', models.CharField(blank=True, max_length=200, null=True, verbose_name='date of birth')),
                ('date_of_death', models.CharField(blank=True, max_length=200, null=True, verbose_name='date of death')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='last name')),
                ('pseudonym', models.CharField(blank=True, max_length=200, null=True, verbose_name='pseudonym')),
            ],
            options={
                'ordering': ('-last_name',),
                'db_table': 'museum_author',
                'verbose_name': 'author',
                'verbose_name_plural': 'authors',
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('label', models.CharField(blank=True, max_length=200, null=True, verbose_name='label')),
                ('url', models.URLField(blank=True, null=True, verbose_name='url')),
                ('usage', models.CharField(blank=True, max_length=200, null=True, verbose_name='usage')),
            ],
            options={
                'ordering': ('-label',),
                'db_table': 'museum_license',
                'verbose_name': 'license',
                'verbose_name_plural': 'licenses',
            },
        ),
        migrations.CreateModel(
            name='MuseumsResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('image', models.ImageField(blank=True, null=True, storage=common.storage.DataStorage(base_url=b'/media/data/', location=b'/home/stahl/icst/soundcolourspace/soundcolourspace/website/media/data'), upload_to=museum.models.generate_data_path, verbose_name='image')),
                ('year', models.CharField(blank=True, max_length=200, null=True, verbose_name='year')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='museums_resources', to='museum.Author')),
                ('license', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='museums_resources', to='museum.License')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('uploader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='museums_resources', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created',),
                'db_table': 'museum_museums_resource',
                'verbose_name': 'museums_resource',
                'verbose_name_plural': 'museums_resources',
                'get_latest_by': 'created',
            },
        ),
    ]
